apiVersion: v1
kind: ConfigMap
metadata:
  name: configmap-files
  namespace: zapp-stag-test
data:
  app_nginx_conf: |
    upstream app {
      least_conn;
      server localhost:3000 weight=10 max_fails=3 fail_timeout=90s;
      # server unix:/tmp/puma.sock fail_timeout=0;
    }
    server {
      client_max_body_size 50M;
      listen 80 default deferred;
      server_name zapp.applicaster.com;
      root /shared/public;
      
      # serve static assets that have a sha fingerprint with a long cache expiration
      location ~ "^/assets/([a-z0-9\/]*)-[a-f0-9]{32}." {
        gzip_static on;
        expires     max;
        add_header  Cache-Control public;
        add_header  Last-Modified "";
        add_header  ETag "";
        access_log off;
        break;
      }
      # serve static (compiled) assets directly if they exist (for rails production)
      location ~ ^/(assets|images|javascripts|stylesheets|swfs|system)/ {
        include /etc/nginx/mime.types;
        try_files $uri/index.html $uri @app;
        access_log off;
        gzip_static on; # to serve pre-gzipped version
        expires max;
        add_header Cache-Control public;
        # Some browsers still send conditional-GET requests if there's a
        # Last-Modified header or an ETag header even if they haven't
        # reached the expiry date sent in the Expires header.
        add_header Last-Modified "";
        add_header ETag "";
        break;
      }
      # send non-static file requests to the app server
      location /health {
        try_files $uri/index.html $uri @app;
      }

      location / {
        root /usr/share/nginx/html/;
        index index.html;
      }

      location @app {
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_redirect off;
        # If you don't find the filename in the static files
        # Then request it from the app server
        if (!-f $request_filename) {
          proxy_pass http://app;
          break;
        }
      }
      if ($request_method !~ ^(GET|HEAD|PUT|POST|DELETE|OPTIONS|PATCH)$ ){
        return 405;
      }
      location ~ \.(php)$ {
        return 405;
      }
      location ~ /healthz {
        return 200;
      }
     error_page 500 502 503 504 /index.html;
      location = /index.html {
        ssi on;
        root /usr/share/nginx/html/;
        index index.html;
        internal;
      }
    }
binaryData: {}
